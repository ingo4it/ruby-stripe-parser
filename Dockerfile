# This Dockerfile for a Ruby application was generated by gcloud.

# The base Dockerfile installs:
# * A number of packages needed by the Ruby runtime and by gems
#   commonly used in Ruby web apps (such as libsqlite3)
# * A recent version of NodeJS
# * A recent version of the standard Ruby runtime to use by default
# * The bundler gem
#FROM gcr.io/google-appengine/ruby:latest

FROM ruby:latest
# If your application requires a specific ruby version (compatible with rbenv),
# set it here. Leave blank to use the currently recommended default.
ARG REQUESTED_RUBY_VERSION=""

# Install any requested ruby if not already preinstalled by the base image.
# Tries installing a prebuilt package first, then falls back to a source build.
RUN if test -n "$REQUESTED_RUBY_VERSION" -a \
        ! -x /rbenv/versions/$REQUESTED_RUBY_VERSION/bin/ruby; then \
      (apt-get update -y \
        && apt-get install -y -q gcp-ruby-$REQUESTED_RUBY_VERSION) \
      || (cd /rbenv/plugins/ruby-build \
        && git pull \
        && rbenv install -s $REQUESTED_RUBY_VERSION) \
      && rbenv global $REQUESTED_RUBY_VERSION \
      && gem install -q --no-rdoc --no-ri bundler --version $BUNDLER_VERSION \
      && apt-get clean \
      && rm -f /var/lib/apt/lists/*_*; \
    fi
ENV RBENV_VERSION=${REQUESTED_RUBY_VERSION:-$RBENV_VERSION}

RUN apt-get update && apt-get install -y redis-tools apt-utils

# Copy the application files.
COPY . /app/

# Install required gems if Gemfile.lock is present.
#RUN if test -f Gemfile.lock; then \
#      bundle install --deployment --without="development test" \
#      && rbenv rehash; \
#    fi

WORKDIR /app
RUN bundle install

# Temporary. Will be moved to base image later.
ENV RACK_ENV=production \
    RAILS_ENV=production \
    RAILS_SERVE_STATIC_FILES=true \
    REDIS_URL=redis://35.188.138.9:6379/0 \
    REDIS_PASSWORD=yW6JcBRC \
    STRIPE_SECRET_KEY=sk_live_xxx \
    STRIPE_PUBLIC_KEY=pk_live_xxx \
    MYSQL_USER=shipt_user \
    MYSQL_PASSWORD=xxx \
    MYSQL_DATABASE=shipt \
    MYSQL_SOCKET_PATH=/cloudsql/stripeparser:us-central1:stripeparser-db \
    STRIPE_WEBHOOK_SECRET=whsec_xxxx \
    SENTRY_DSN=https://0917dc862789438082eeebeec409d2b7:04f162a2e9ec425faa537a40f215b66f@sentry.io/215356

# Run asset pipeline if we're in a Rails app.
RUN if test -d app/assets -a -f config/application.rb; then \
      bundle exec rake assets:precompile || true; \
    fi

# BUG: Reset entrypoint to override base image.
# ENTRYPOINT []

# Start application on port $PORT.
CMD ["/bin/sh","./docker/entrypoint.sh"]
